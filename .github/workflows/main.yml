name: Main
on:
  - push
  - pull_request
jobs:
  client-build:
    name: Build Client
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 14.x
      - name: Install script dependencies
        working-directory: ./client
        run: npm ci
      - name: Build
        working-directory: ./client
        run: npm run build
  client-lint:
    name: Lint-client
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 14.x
      - name: Install script dependencies
        working-directory: ./client
        run: npm ci
      - name: Lint
        working-directory: ./client
        run: npm run lint
  server-build:
    name: Build Server
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Java
        uses: actions/setup-java@v1
        with:
          java-version: "15"
      - name: Build
        working-directory: ./server
        run: ./gradlew assemble
  docker:
    name: Build Docker image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Docker meta
        id: docker_meta
        uses: crazy-max/ghaction-docker-meta@v1
        with:
          images: ghcr.io/joshuaavalon/warehouse
          tag-sha: true
      - name: Setup QEMU
        uses: docker/setup-qemu-action@v1
      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login Docker
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: joshuaavalon
          password: ${{ secrets.PERSONAL_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.docker_meta.outputs.tags }}
          platforms: linux/amd64
